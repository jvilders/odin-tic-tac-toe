{"version":3,"file":"presentationController.js","sourceRoot":"","sources":["../../src/presentationController/presentationController.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ITicTacToeController,\n  twoPlayerTicTacToeController,\n  aiTicTacToeController,\n} from \"./gameController/index.js\";\n\nexport default function presentationController() {\n  const possiblyNullTurnH1 =\n    document.querySelector<HTMLHeadingElement>(\".turn\");\n  const possiblyNullBoardDiv = document.querySelector<HTMLDivElement>(\".board\");\n\n  if (!possiblyNullTurnH1 || !possiblyNullBoardDiv) {\n    throw \"Either the turn or board element isn't present in the document\";\n  }\n\n  const turnH1 = possiblyNullTurnH1;\n  const boardDiv = possiblyNullBoardDiv;\n\n  let game: ITicTacToeController;\n\n  function renderBoard() {\n    const gameBoard = game.getBoard();\n    const activePlayer = game.getActivePlayer();\n\n    turnH1.textContent = `${activePlayer.getName()}'s turn`;\n\n    let gridElementIndex = 0;\n    for (let i = 0; i < 3; i++, gridElementIndex++) {\n      for (let j = 0; j < 3; j++, gridElementIndex++) {\n        const boardCell = gameBoard[i][j];\n        boardDiv.children[gridElementIndex].textContent = boardCell.getValue();\n      }\n      gridElementIndex--;\n    }\n  }\n\n  function clickListener(clickEvent: MouseEvent) {\n    console.log(clickEvent);\n    const selectedCell = clickEvent.target as HTMLSpanElement;\n    if (!selectedCell.classList.contains(\"board-element\")) {\n      console.log(\"not a grid cell, returning\");\n      return;\n    }\n\n    const selectedRow = Number(selectedCell.getAttribute(\"data-row\") as string);\n    const selectedColumn = Number(\n      selectedCell.getAttribute(\"data-column\") as string\n    );\n\n    const possibleGameEnd = game.playRound(selectedRow, selectedColumn);\n    renderBoard();\n\n    if (possibleGameEnd) {\n      turnH1.textContent = possibleGameEnd.endMessage();\n\n      // clean up click listener to prevent further interaction\n      boardDiv.removeEventListener(\"click\", clickListener);\n    }\n  }\n\n  const playerNameForm = document.querySelector<HTMLFormElement>(\".name-form\");\n  playerNameForm?.addEventListener(\"submit\", (submitEvent) => {\n    submitEvent.preventDefault();\n    const formData = new FormData(submitEvent.target as HTMLFormElement);\n\n    const player1Name = formData.get(\"player1-name\") as string;\n    const player2Name = formData.get(\"player2-name\") as string;\n\n    if (!player2Name) {\n      game = aiTicTacToeController(player1Name);\n    } else {\n      game = twoPlayerTicTacToeController(player1Name, player2Name);\n    }\n\n    renderBoard();\n\n    boardDiv.addEventListener(\"click\", clickListener);\n  });\n\n  const submitButton = document.querySelector<HTMLButtonElement>(\n    \"form > button\"\n  ) as HTMLButtonElement;\n  playerNameForm?.addEventListener(\n    \"submit\",\n    (submitEvent) => {\n      submitEvent.preventDefault();\n\n      submitButton.textContent = \"Reset\";\n    },\n    { once: true }\n  );\n}\n"]}